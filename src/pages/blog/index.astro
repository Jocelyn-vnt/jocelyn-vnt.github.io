---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import MeshGradientBackground from '../../components/MeshGradientBackground.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import Doctype from '../../components/Doctype.astro';

// Récupération de tous les posts
const allPosts = await getCollection('blog');

// Ordre personnalisé des projets pour la grille
const customOrder = [
    'second-post',    // Limoges Habitat (position 1)
    'fifth-post',     // Coachella (position 2) 
    'third-post',     // Dragon Ball Z (position 3)
    'fourth-post',    // Limousin Informatique (position 4)
    'first-post',     // Carlton Story/SAE301 (position 5)
];

// Réorganisation selon l'ordre personnalisé
const orderedPosts = [];
const remainingPosts = [...allPosts];

// Ajouter les posts dans l'ordre personnalisé
customOrder.forEach(slug => {
    const postIndex = remainingPosts.findIndex(post => post.slug === slug);
    if (postIndex !== -1) {
        orderedPosts.push(remainingPosts.splice(postIndex, 1)[0]);
    }
});

// Ajouter les posts restants triés par date
remainingPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const posts = [...orderedPosts, ...remainingPosts];

// Fonction pour déterminer la catégorie d'un post
function getPostCategory(post) {
    const title = post.data.title.toLowerCase();
    const description = post.data.description.toLowerCase();
    
    if (title.includes('dragon ball') || title.includes('3d') || description.includes('3d')) {
        return '3d';
    } else if (title.includes('motion') || description.includes('motion') || title.includes('animation') || title.includes('video')) {
        return 'motion-design';
    } else if (title.includes('web') || title.includes('site') || title.includes('stratégie') || description.includes('web')) {
        return 'web-design';
    } else {
        return 'graphic-design';
    }
}

// Assignation des positions de grid pour chaque post
const gridPositions = [
    'grid-pos-1', // Premier post : div1 (2 colonnes, 3 rangées)
    'grid-pos-2', // Deuxième post : div2 (1 colonne, 3 rangées)
    'grid-pos-5', // Troisième post : div5 (2 colonnes, 2 rangées)
    'grid-pos-6', // Quatrième post : div6 (2 colonnes, 2 rangées)
    'grid-pos-7', // Cinquième post : div7 (3 colonnes, 2 rangées)
    'grid-pos-8', // Sixième post : div8 (2 colonnes, 1 rangée)
];
---

<Doctype/>

<MeshGradientBackground />

<main class="flex-grow flex justify-center">
    <div class="w-full">
        <!-- Header -->
        <div class="fixed flex w-full justify-center items-center pt-5 z-50">
            <Header />
        </div>

        <!-- Title Section -->
        <div class="relative flex flex-col items-center pt-32 pb-12">
            <h1 class="text-[248px] font-bold font-anuphan text-white relative" id="portfolio-text">
                Projets
                <span class="absolute text-purple-800 font-alex text-[144px] font-normal bottom-0 right-0" id="design-text">Design</span>
            </h1>
        </div>

        <!-- Filter Section -->
        <section class="flex justify-center px-6 pb-8 relative z-10">
            <div class="flex gap-4 justify-center flex-wrap">
                <button 
                    class="filter-btn active px-6 py-3 bg-white/10 backdrop-blur-lg border border-glass rounded-full text-white font-anuphan font-medium hover:bg-white/20 hover:border-purple-400/50 transition-all duration-300 shadow-glass"
                    data-filter="all"
                >
                    Tout
                </button>
                <button 
                    class="filter-btn px-6 py-3 bg-white/10 backdrop-blur-lg border border-glass rounded-full text-white font-anuphan font-medium hover:bg-white/20 hover:border-purple-400/50 transition-all duration-300 shadow-glass"
                    data-filter="motion-design"
                >
                    Motion Design
                </button>
                <button 
                    class="filter-btn px-6 py-3 bg-white/10 backdrop-blur-lg border border-glass rounded-full text-white font-anuphan font-medium hover:bg-white/20 hover:border-purple-400/50 transition-all duration-300 shadow-glass"
                    data-filter="graphic-design"
                >
                    Graphic Design
                </button>
                <button 
                    class="filter-btn px-6 py-3 bg-white/10 backdrop-blur-lg border border-glass rounded-full text-white font-anuphan font-medium hover:bg-white/20 hover:border-purple-400/50 transition-all duration-300 shadow-glass"
                    data-filter="web-design"
                >
                    Web Design
                </button>
                <button 
                    class="filter-btn px-6 py-3 bg-white/10 backdrop-blur-lg border border-glass rounded-full text-white font-anuphan font-medium hover:bg-white/20 hover:border-purple-400/50 transition-all duration-300 shadow-glass"
                    data-filter="3d"
                >
                    3D
                </button>
            </div>
        </section>

        <!-- Projects Grid Section -->
        <section class="flex justify-center px-6 py-8 relative z-10">
            <div class="w-full max-w-7xl">
                <!-- Message quand aucun projet trouvé -->
                <div id="no-projects" class="hidden text-center py-20">
                    <div class="bg-white/10 backdrop-blur-lg border border-glass rounded-2xl p-8 shadow-glass max-w-md mx-auto">
                        <h3 class="text-white font-anuphan font-bold text-xl mb-4">Aucun projet trouvé</h3>
                        <p class="text-white/70">Aucun projet ne correspond à cette catégorie pour le moment.</p>
                    </div>
                </div>

                <!-- Grille personnalisée -->
                <div id="projects-grid" class="projects-grid">
                    {posts.slice(0, 6).map((post, index) => {
                        const category = getPostCategory(post);
                        const gridClass = gridPositions[index] || 'grid-pos-extra';
                        
                        return (
                            <div 
                                class={`project-card ${gridClass} relative group overflow-hidden rounded-2xl transition-all duration-500 ease-in-out`} 
                                data-category={category}
                            >
                                <a href={`/blog/${post.slug}/`} class="block h-full">
                                    <div class="relative w-full h-full min-h-[200px] overflow-hidden rounded-2xl">
                                        <img 
                                            src={post.data.heroImage} 
                                            alt={post.data.title}
                                            class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                                        />
                                        
                                        <!-- Overlay graduel -->
                                        <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300"></div>
                                        
                                        <!-- Contenu de la carte -->
                                        <div class="absolute inset-0 p-6 flex flex-col justify-end">
                                            <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                                                <h3 class="text-white font-anuphan font-bold text-lg mb-2 line-clamp-2">
                                                    {post.data.title}
                                                </h3>
                                                <p class="text-white/80 text-sm mb-3 line-clamp-2">
                                                    {post.data.description}
                                                </p>
                                                <div class="flex items-center justify-between">
                                                    <span class="text-white/70 text-xs font-medium">
                                                        <FormattedDate date={post.data.pubDate} />
                                                    </span>
                                                    <span class="text-purple-300 text-sm font-medium opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                                        Voir le projet →
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Badge catégorie -->
                                        <div class="absolute top-4 left-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                            <span class="px-3 py-1 bg-white/20 backdrop-blur-md rounded-full text-white text-xs font-medium border border-white/30">
                                                {category === 'motion-design' ? 'Motion Design' : 
                                                 category === 'graphic-design' ? 'Graphic Design' : 
                                                 category === '3d' ? '3D' :
                                                 'Web Design'}
                                            </span>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        );
                    })}
                    
                    <!-- S'il y a plus de 6 posts, les afficher dans une grille simple en dessous -->
                    {posts.length > 6 && (
                        <div class="additional-projects mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {posts.slice(6).map((post) => {
                                const category = getPostCategory(post);
                                
                                return (
                                    <div 
                                        class="project-card relative group overflow-hidden rounded-2xl transition-all duration-500 ease-in-out" 
                                        data-category={category}
                                    >
                                        <a href={`/blog/${post.slug}/`} class="block h-full">
                                            <div class="relative w-full h-64 overflow-hidden rounded-2xl">
                                                <img 
                                                    src={post.data.heroImage} 
                                                    alt={post.data.title}
                                                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                                                />
                                                
                                                <!-- Overlay graduel -->
                                                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300"></div>
                                                
                                                <!-- Contenu de la carte -->
                                                <div class="absolute inset-0 p-6 flex flex-col justify-end">
                                                    <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                                                        <h3 class="text-white font-anuphan font-bold text-lg mb-2 line-clamp-2">
                                                            {post.data.title}
                                                        </h3>
                                                        <p class="text-white/80 text-sm mb-3 line-clamp-2">
                                                            {post.data.description}
                                                        </p>
                                                        <div class="flex items-center justify-between">
                                                            <span class="text-white/70 text-xs font-medium">
                                                                <FormattedDate date={post.data.pubDate} />
                                                            </span>
                                                            <span class="text-purple-300 text-sm font-medium opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                                                Voir le projet →
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <!-- Badge catégorie -->
                                                <div class="absolute top-4 left-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                                    <span class="px-3 py-1 bg-white/20 backdrop-blur-md rounded-full text-white text-xs font-medium border border-white/30">
                                                        {category === 'motion-design' ? 'Motion Design' : 
                                                         category === 'graphic-design' ? 'Graphic Design' : 
                                                         category === '3d' ? '3D' :
                                                         'Web Design'}
                                                    </span>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                );
                            })}
                        </div>
                    )}
                </div>
            </div>
        </section>
    </div>
</main>

<style>
    /* Grille personnalisée basée sur votre CSS */
    .projects-grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(5, 200px);
        gap: 8px;
        width: 100%;
        height: auto;
    }
    
    /* Positions de grille correspondant à votre CSS */
    .grid-pos-1 {
        grid-column: span 2 / span 2;
        grid-row: span 3 / span 3;
    }
    
    .grid-pos-2 {
        grid-row: span 3 / span 3;
        grid-column-start: 3;
    }
    
    .grid-pos-5 {
        grid-column: span 2 / span 2;
        grid-row: span 2 / span 2;
        grid-column-start: 4;
    }
    
    .grid-pos-6 {
        grid-column: span 2 / span 2;
        grid-row: span 2 / span 2;
        grid-column-start: 4;
        grid-row-start: 3;
    }
    
    .grid-pos-7 {
        grid-column: span 3 / span 3;
        grid-row: span 2 / span 2;
        grid-row-start: 4;
    }
    
    .grid-pos-8 {
        grid-column: span 2 / span 2;
        grid-column-start: 4;
        grid-row-start: 5;
    }
    
    /* Transitions pour les cartes */
    .project-card {
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    /* États de filtrage */
    .project-card.filtering-out {
        opacity: 0;
        transform: scale(0.8) translateY(20px);
        pointer-events: none;
    }
    
    .project-card.filtering-in {
        opacity: 1;
        transform: scale(1) translateY(0);
        pointer-events: auto;
    }
    
    .project-card.hidden {
        display: none;
    }
    
    /* Style pour les boutons de filtre actifs */
    .filter-btn.active {
        background: rgba(168, 85, 247, 0.3);
        border-color: rgba(168, 85, 247, 0.5);
        color: #e879f9;
        box-shadow: 0 0 20px rgba(168, 85, 247, 0.3);
        transform: translateY(-2px);
    }
    
    .filter-btn {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .filter-btn:hover {
        transform: translateY(-1px);
    }
    
    /* Animation de la grille lors du filtrage */
    #projects-grid {
        transition: height 0.4s ease;
    }
    
    /* Responsive pour la grille personnalisée */
    @media (max-width: 1200px) {
        .projects-grid {
            grid-template-columns: repeat(4, 1fr);
            grid-template-rows: repeat(4, 220px);
            gap: 12px;
        }
        
        .grid-pos-1 {
            grid-column: 1 / 3;
            grid-row: 1 / 3;
        }
        
        .grid-pos-2 {
            grid-column: 3 / 5;
            grid-row: 1 / 3;
        }
        
        .grid-pos-5 {
            grid-column: 1 / 3;
            grid-row: 3 / 5;
        }
        
        .grid-pos-6 {
            grid-column: 3 / 5;
            grid-row: 3 / 5;
        }
        
        .grid-pos-7 {
            grid-column: 1 / 5;
            grid-row: 5 / 6;
        }
        
        .grid-pos-8 {
            display: none; /* Masqué sur tablette */
        }
    }
    
    @media (max-width: 768px) {
        .projects-grid {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(3, 200px);
            gap: 10px;
            padding: 10px;
        }
        
        .grid-pos-1 {
            grid-column: 1 / 2;
            grid-row: 1 / 2;
        }
        
        .grid-pos-2 {
            grid-column: 2 / 3;
            grid-row: 1 / 2;
        }
        
        .grid-pos-5 {
            grid-column: 1 / 2;
            grid-row: 2 / 3;
        }
        
        .grid-pos-6 {
            grid-column: 2 / 3;
            grid-row: 2 / 3;
        }
        
        .grid-pos-7 {
            grid-column: 1 / 2;
            grid-row: 3 / 4;
        }
        
        .grid-pos-8 {
            display: block;
            grid-column: 2 / 3;
            grid-row: 3 / 4;
        }
    }
    
    @media (max-width: 580px) {
        .projects-grid {
            grid-template-columns: 1fr;
            grid-template-rows: repeat(6, 180px);
            gap: 8px;
            padding: 8px;
        }
        
        .grid-pos-1 {
            grid-column: 1;
            grid-row: 1;
        }
        
        .grid-pos-2 {
            grid-column: 1;
            grid-row: 2;
        }
        
        .grid-pos-5 {
            grid-column: 1;
            grid-row: 3;
        }
        
        .grid-pos-6 {
            grid-column: 1;
            grid-row: 4;
        }
        
        .grid-pos-7 {
            grid-column: 1;
            grid-row: 5;
        }
        
        .grid-pos-8 {
            display: block;
            grid-column: 1;
            grid-row: 6;
        }
    }
    
    /* Effet de ligne de texte clampé */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    /* Animation d'entrée en cascade */
    .project-card.cascade-enter {
        animation: cascadeIn 0.6s ease-out forwards;
    }
    
    @keyframes cascadeIn {
        from {
            opacity: 0;
            transform: translateY(30px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }
</style>


<svg width="0" height="0">
    <filter id="gooey">
        <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
        <feColorMatrix in="blur" mode="matrix" values="
            1 0 0 0 0
            0 1 0 1 0
            0 0 1 0 0
            1 0 0 20 -10" result="gooey" />
        <feComposite in="SourceGraphic" in2="gooey" operator="atop" />
    </filter>
</svg>

</body>
</html>